name: CI
on: [push]
jobs:

  ubuntu-build:
    name: Ubuntu build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: go build -v -i -o cstest .

      - name: Running the tests
        run: ./cstest -help

      - name: Create package
        run: |
          tar cvzf cstest-linux.tar.gz cstest

      - name: Upload package
        uses: skx/github-action-publish-binaries@54e5edf6f0a5bc3ee3b23b121e8f82828d11dfe6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: cstest-linux.tar.gz

  windows-build:
    name: Windows build
    runs-on: windows-latest
    steps:
      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: echo stub

      - name: Build
        run: go build -v -i -o cstest.exe .

      - name: Running the tests
        run: cstest.exe -help

      - name: Create package
        run: |
          7z.exe a -tzip -r cstest.zip cstest.exe

      - name: Upload package
        uses: actions/upload-artifact@v1.0.0
        with:
          name: cstest-windows.zip
          path: cstest.zip

  macOS-build:
    name: MacOS build
    runs-on: macOS-latest
    steps:
      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: go build -v -i -o cstest .

      - name: Running the tests
        run: ./cstest -help

      - name: Create package
        run: |
          tar cvzf cstest.tar.gz cstest

      - name: Upload package
        uses: actions/upload-artifact@v1.0.0
        with:
          name: cstest-macOS.tar.gz
          path: cstest.tar.gz
